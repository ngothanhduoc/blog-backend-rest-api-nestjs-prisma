name: Staging test-prisma  

on:
  push:
    branches:
      - 'staging'
    tags:
      - '*-stg'
jobs:
  build:
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Get Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Get tag name
        id: get_tag
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

      - name: Install Convox
        run: |
          curl -L https://github.com/convox/convox/releases/latest/download/convox-linux -o /tmp/convox
          sudo mv /tmp/convox /usr/local/bin/convox
          sudo chmod 755 /usr/local/bin/convox

      - name: Login Convox
        run: |
          convox login console.convox.com -t ${{ secrets.STG_CONVOX_CLI_KEY }}
          convox switch  ${{ secrets.STG_CONVOX_RACK }}

      - name: Build Convox and get Release Id
        id: get_releases_id
        run: |
          release=$(convox build --app test-prisma --id)
          if [ -z "$release" ]
          then
            echo "Convox build failed"
            exit 1
          fi
          echo "::set-output name=releases_id::$release"

      - name: Run db migration
        run: |
          prisma=$(convox run api -a test-prisma --release ${{ steps.get_releases_id.outputs.releases_id }} npx prisma migrate deploy | sed "2 d")
          echo $prisma
          build_failed=$(echo $prisma | grep failed)
          build_error=$(echo $prisma | grep Error)
          
          if [ -n "$build_failed" ]
          then
            echo "Convox build failed with message ${build_failed}"
            exit 1
          fi
          if [ -n "$build_error" ]
          then
            echo "Convox build Error ${build_error}"
            exit 1
          fi
      
      - name: Deploy Convox
        run: convox releases promote ${{ steps.get_releases_id.outputs.releases_id }} -a test-prisma
